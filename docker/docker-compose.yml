version: '3.8'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.2@sha256:1c53c89d04f207beb99d56cc4a1cc23516bd9c386858843d5082a98257c04d1c
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
      discovery.type: "single-node"
      xpack.security.enabled: false
      xpack.security.enrollment.enabled: false
    networks:
      - infra

  kibana:
    image: docker.elastic.co/kibana/kibana:8.6.2@sha256:7157c399f97acddf3297501d5af66097d57be67d27d62f810bcbdd11785a39b8
    ports:
      - "5601:5601"
    networks:
      - infra
    depends_on:
      - elasticsearch

  alertmanager:
    hostname: alertmanager
    image: prom/alertmanager@sha256:e13b6ed5cb929eeaee733479dce55e10eb3bc2e9c4586c705a4e8da41e5eacf5
    volumes:
      - ${PWD}/alertmanager/alertmanager.conf:/etc/alertmanager/alertmanager.conf
    command:
      - '--config.file=/etc/alertmanager/alertmanager.conf'
    ports:
      - "9093:9093"
    networks:
      - infra

  prometheus:
    hostname: prometheus
    image: prom/prometheus@sha256:565ee86501224ebbb98fc10b332fa54440b100469924003359edf49cbce374bd
    volumes:
      - ${PWD}/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ${PWD}/prometheus/alert_rules.yml:/etc/prometheus/alert_rules.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    links:
      - alertmanager:alertmanager
    ports:
      - "9090:9090"
    networks:
      - infra

  grafana:
    hostname: grafana
    image: grafana/grafana@sha256:d8ea37798ccc41061a62ab080f2676dda6bf7815558499f901bdb0f533a456fb
    volumes:
      - ${PWD}/grafana/grafana_datasources.yml:/etc/grafana/provisioning/datasources/all.yaml
      - ${PWD}/grafana/grafana_config.ini:/etc/grafana/config.ini
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - infra

  jaeger-all-in-one:
    image: jaegertracing/all-in-one:latest@sha256:7e9591218e7ddd51e568ef892e3ea190ae420ecf97c4d718910a3f57e076c216
    ports:
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
    networks:
      - infra

  otel-collector:
    image: otel/opentelemetry-collector:latest@sha256:f6842984eafb35be5198d080e40ca3f6b3b45c6c2456318a41ce7f2fa71ba973
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    volumes:
      - ${PWD}/otel-collector/otel-collector-config.yaml:/etc/otel-collector-config.yaml:Z
    ports:
      - "13133:13133" # Health-check extension
      - "4317:4317"   # OTLP gRPC receiver
    depends_on:
      - jaeger-all-in-one
    networks:
      - infra

#  mongo:
#    image: mongo
#    restart: always
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: root
#      MONGO_INITDB_ROOT_PASSWORD: example
#    ports:
#      - 27017:27017
#    networks:
#      - infra
#
#  mongo-express:
#    image: mongo-express
#    restart: always
#    ports:
#      - 8085:8081
#    environment:
#      ME_CONFIG_MONGODB_ADMINUSERNAME: root
#      ME_CONFIG_MONGODB_ADMINPASSWORD: example
#      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
#    networks:
#      - infra


volumes:
  prometheus_data: { }
  grafana_data: { }
networks:
  infra:
    driver: bridge
